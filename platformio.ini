; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = bgeigiecast
default_envs = m5stack-core2-debug

[env]
platform = espressif32
framework = arduino
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
test_build_src = true
test_ignore = 
	test_led
	test_state_machine
	test_stability
lib_deps = 
	SensorReporter=https://github.com/Claypuppet/SensorReporter.git

[env:m5stack-core2]
platform = espressif32
framework = arduino
board = m5stack-core2
lib_deps = 
	m5stack/M5Core2@^0.1.2
	alextaujenis/RBD_Timer@^1.3.2
; Use build_src_filter in env sections to include/exclude platform-specific files
; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_src_filter.html#projectconf-build-src-filter
build_src_filter = 
	 +<**/*.h>
	 +<**/*.hpp>
	 +<**/*.cpp>
	 -<**/button.h>
	 -<**/button.cpp>
	 -<**/mode_led.h>
	 -<**/mode_led.cpp>
	 -<**/rgb_led.h>
	 -<**/rgb_led.cpp>
	 -<**/local_storage.h>
	 -<**/local_storage.cpp>
	 -<**/user_config.h>
	 -<**/bgeigie_connector.cpp>
	 -<**/bgeigie_connector.h>

; Same as above, for debug and backtrace decoding
[env:m5stack-core2-debug]
platform = espressif32
framework = arduino
board = m5stack-core2
lib_deps = 
	m5stack/M5Core2@^0.1.2
	alextaujenis/RBD_Timer@^1.3.2
; Use build_src_filter in env sections to include/exclude platform-specific files
; https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_src_filter.html#projectconf-build-src-filter
build_src_filter = 
	 +<**/*.h>
	 +<**/*.hpp>
	 +<**/*.cpp>
	 -<**/button.h>
	 -<**/button.cpp>
	 -<**/mode_led.h>
	 -<**/mode_led.cpp>
	 -<**/rgb_led.h>
	 -<**/rgb_led.cpp>
	 -<**/local_storage.h>
	 -<**/local_storage.cpp>
	 -<**/user_config.h>
	 -<**/bgeigie_connector.cpp>
	 -<**/bgeigie_connector.h>
build_type = debug
monitor_filters =
  default  ; Remove typical terminal control codes from input
  esp32_exception_decoder  ; Decode the backtrace

[env:bGeigieCast]
board = esp32doit-devkit-v1
lib_deps = lorol/LittleFS_esp32@^1.0
upload_speed = 115200
; Ignore files specific to m5stack-core2
build_src_filter = 
	 +<**/*.h>
	 +<**/*.hpp>
	 +<**/*.cpp>
	 -<**/display.h>
	 -<**/display.cpp>
	 -<**/gfxscreen.h>
	 -<**/gfxscreen.cpp>

[env:wrover]
board = esp-wrover-kit
upload_port = /dev/ttyUSB1
monitor_port = /dev/ttyUSB1
build_flags = 
	-DRX2=21
	-DTX2=22
lib_deps = lorol/LittleFS_esp32@^1.0
; Ignore files specific to m5stack-core2
build_src_filter = 
	 +<**/*.h>
	 +<**/*.hpp>
	 +<**/*.cpp>
	 -<**/display.h>
	 -<**/display.cpp>
	 -<**/gfxscreen.h>
	 -<**/gfxscreen.cpp>

[env:wrover-test]
board = esp-wrover-kit
upload_port = /dev/ttyUSB1
monitor_port = /dev/ttyUSB1
build_flags = 
	-DRX2=21
	-DTX2=22
build_unflags = 
	-fno-rtti
test_build_src = true
test_ignore = 
	test_builtin_led
	test_led
	test_state_machine
	test_stability
lib_deps = lorol/LittleFS_esp32@^1.0
; Ignore files specific to m5stack-core2
build_src_filter = 
	 +<**/*.h>
	 +<**/*.hpp>
	 +<**/*.cpp>
	 -<**/display.h>
	 -<**/display.cpp>
	 -<**/gfxscreen.h>
	 -<**/gfxscreen.cpp>
